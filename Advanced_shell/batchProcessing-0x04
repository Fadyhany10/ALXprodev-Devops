#!/bin/bash

# Pokémon list
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Output directory and error log
mkdir -p pokemon_data
> errors.txt

# Function to fetch a single Pokémon
fetch_pokemon() {
    local name=$1
    local output="pokemon_data/${name}.json"

    echo "Fetching data for $name..."

    # Fetch in background and output HTTP code to temp file
    curl -s -w "%{http_code}" "https://pokeapi.co/api/v2/pokemon/$name" -o "$output" &
}

# Start all fetches in background
for name in "${pokemon_list[@]}"; do
    fetch_pokemon "$name" &
done

# List background jobs
echo ""
echo "=== Background Jobs Started ==="
jobs
echo "==============================="
echo ""

# Wait a few seconds and optionally kill any hanging jobs (simulation)
sleep 3

# Optional: kill all remaining background jobs
for job in $(jobs -p); do
    if kill -0 "$job" 2>/dev/null; then
        kill "$job"
        echo "Killed hanging job with PID $job" >> errors.txt
    fi
done

# Wait for all background jobs to terminate
wait

echo "✅ All fetches and jobs are handled."
